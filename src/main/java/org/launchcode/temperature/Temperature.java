/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.launchcode.temperature;

public class Temperature {
    private final double degrees;
    private final Scale scale;

    @Override
    public int hashCode() {
        return super.hashCode();
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (this == obj) return true;
        if (!(obj instanceof Temperature)) return false;
        Temperature other = (Temperature) obj;
        Scale scale = getScale();
        switch (scale) {
            case CELSIUS:
                other = other.toCelsius();
                break;
            case FAHRENHEIT:
                other = other.toFahrenheit();
                break;
            default:
                other = other.toKelvin();
                break;
        }
        return scale == other.getScale() && getDegrees() == other.getDegrees();
    }

    @Override
    public String toString() {
        return Double.toString(getDegrees()) + getScale().toString();
    }

    public Temperature(double degrees, Scale scale) {
        this.degrees = degrees;
        this.scale = scale;
    }

    public double getDegrees() {
        return degrees;
    }

    public Scale getScale() {
        return scale;
    }

    private static double fahrenheitToCelsius(double degreesF) {
        return (degreesF - 32.0) * 5.0 / 9.0;
    }

    private static double celsiusToKelvin(double degreesC) {
        return degreesC + 273.15;
    }

    private static double kelvinToCelsius(double degreesC) {
        return degreesC - 273.15;
    }

    private static double celsiusToFahrenheit(double degreesC) {
        return degreesC * 9.0 / 5.0 + 32.0;
    }

    public Temperature toKelvin() {
        double converted = getDegrees();
        switch (getScale()) {
            case FAHRENHEIT:
                converted = fahrenheitToCelsius(converted);
            case CELSIUS:
                converted = celsiusToKelvin(converted);
            default:
                return new Temperature(converted, Scale.KELVIN);
        }
    }

    public Temperature toCelsius() {
        double converted = getDegrees();
        Scale fromScale = getScale();
        if (fromScale == Scale.KELVIN) {
            converted = kelvinToCelsius(converted);
        } else if (fromScale == Scale.FAHRENHEIT) {
            converted = fahrenheitToCelsius(converted);
        }
        return new Temperature(converted, Scale.CELSIUS);
    }

    public Temperature toFahrenheit() {
        double converted = getDegrees();
        switch (getScale()) {
            case KELVIN:
                converted = kelvinToCelsius(converted);
            case CELSIUS:
                converted = celsiusToFahrenheit(converted);
            default:
                return new Temperature(converted, Scale.FAHRENHEIT);
        }
    }
}
